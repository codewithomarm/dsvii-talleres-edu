TAREAS
	- Conexion a la base de datos:
		- username: dsvii
		- password: root
	- Base de datos
		- Diseño de Tablas
		- Stored Procedures (generacion de reportes JSON / XML)
			- Listado de talleres
			- Talleres inscritos por usuario (Historial de talleres inscritos)
	- Diseño de la pagina
		1 - Formulario de inicio de sesion
			* username
			* password
			* registrar
		2 - Formulario de Registro
		3 - Main page (User)
			* Mensaje de Bienvenida
			* Dashboard de taller inscritos
				- Nombre
				- Fecha/Hora
				- Dias restantes
			* Lista de los talleres disponibles en la aplicacion
				* Status de disponibilidad para el usuario
			* Logout
		4 - Taller (Individual) (User)
				 * Informacion de cada taller (info en la base de datos)
				 * Abajo el BOTON De registrar
					# Validacion #1: Que el usuario no este registrado
					# Validacion #2: Que el taller no este al cupo_maximo
				 * Notificacion de registrado
		5 - Main Page (Admin)
			* Mensaje de Bienvenida
			* Dashboard de status de tallers
				- Total de talleres actuales
				- Total de usuarios registrados
			* Lista de los talleres y su informacion
				- Nombre
				- Fecha
				- Total usuarios inscritos
				- si esta al cupo maximo
			* CRUD Talleres (Boton)
			* Generar Reportes (Boton)
			* Logout
		6 - CRUD Talleres (para admin)
		7 - Reportes (para admin)
			- Seleccionar formato (JSON/XML)
			- Seleccionar tipo de reporte
				* Todos los talleres con su informacion
				* Todos los usuarios con su informacion
				* Elegir especificamente un taller (por el id)
				* Elegir especificamente un usuario (por el id)
			- Boton para generar y descargar
	- 

CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE
    password_hash VARCHAR(255) NOT NULL
    email VARCHAR(100) NOT NULL UNIQUE,
    is_admin TINYINT(1) NOT NULL DEFAULT 0,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    cedula_id BIGINT NOT NULL UNIQUE,
    FOREIGN KEY (cedula_id) REFERENCES cedula(id)
      ON DELETE RESTRICT
      ON UPDATE CASCADE
);

CREATE TABLE talleres (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    descripcion VARCHAR(300),
    cupo_maximo INT NOT NULL,
    fecha_inicio DATE,
    hora_inicio TIME,
    fecha_fin DATE,
    hora_fin TIME
);

CREATE TABLE inscripciones (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    taller_id INT NOT NULL,
    fecha_inscripcion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(usuario_id, taller_id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (taller_id) REFERENCES talleres(id) ON DELETE CASCADE
);

CREATE TABLE cedula_category (
  code VARCHAR(2) PRIMARY KEY,
  description VARCHAR (100) NOT NULL
);

CREATE TABLE province (
  code SMALLINT PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);

CREATE TABLE cedula (
  id BIGSERIAL PRIMARY KEY,
  category_code VARCHAR(2) NOT NULL
    REFERENCES cedula_category(code)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,
  province_code SMALLINT
    REFERENCES province(code)
    ON UPDATE CASCADE
    ON DELETE RESTRICT,
  letter_prefix    VARCHAR(2),
  tomo INTEGER NOT NULL CHECK (tomo  > 0),
  asiento INTEGER NOT NULL CHECK (asiento > 0),
  CONSTRAINT uq_cedula_full UNIQUE (
    category_code, province_code, letter_prefix, tomo, asiento
  ),
  -- Validaciones por categoría:
  CONSTRAINT chk_cedula_category_format CHECK (
    (category_code = 'NAC'
       AND letter_prefix  IS NULL
       AND province_code IS NOT NULL)
    OR
    (category_code = 'N'
       AND letter_prefix  = 'N'
       AND province_code IS NULL)
    OR
    (category_code = 'E'
       AND letter_prefix  = 'E'
       AND province_code IS NOT NULL)
    OR
    (category_code = 'PE'
       AND letter_prefix  = 'PE'
       AND province_code IS NOT NULL)
    OR
    (category_code = 'PI'
       AND letter_prefix  = 'PI'
       AND province_code IS NOT NULL)
  )
);



-- Datos de ejemplo
INSERT INTO cedula_category(code, description) VALUES
  ('NAC', 'Panameño por nacimiento'),
  ('N',   'Naturalizado'),
  ('E',   'Extranjero domiciliado'),
  ('PE',  'Panameño nacido en el extranjero'),
  ('PI',  'Población indígena');

-- Datos de ejemplo
INSERT INTO province(code, name) VALUES
  (1,  'Bocas del Toro'),
  (2,  'Coclé'),
  (3,  'Colón'),
  (4,  'Chiriquí'),
  (5,  'Darién'),
  (6,  'Herrera'),
  (7,  'Los Santos'),
  (8,  'Panamá'),
  (9,  'Veraguas'),
  (10, 'Guna Yala, Madugandí, Wargandí'),
  (11, 'Emberá Wounaan'),
  (12, 'Ngäbe-Buglé'),
  (13, 'Panamá Oeste');

  Para crear un el usuario y pasword definidas al comienzo del archivo:

  CREATE USER 'dsvii_final'@'localhost' IDENTIFIED BY 'root';
  
  GRANT ALL PRIVILEGES ON dsvii_final to 'dsvii_final'@'localhost' WITH GRANT OPTION;

